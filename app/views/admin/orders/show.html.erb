<% if @order.errors.any? %>
<%=@order.errors.count %>件のエラーが発生しました。
<% @order.errors.full_messages.each do |message| %>
  <ul>
    <li><%= message %></li>
  </ul>
  <% end %>
<% end %>




<p>注文履歴詳細</p>
<table>

  <tr>
    <th>購入者</th><td><%= link_to "#{@order.customer.last_name}#{@order.customer.first_name}",admin_customer_path(@order.id) %></td>
  </tr>

  <tr>
    <th>注文日</th><td><%= @order.created_at.strftime('%Y/%m/%d') %></td>
  </tr>

  <tr>
    <th>配送先</th><td>〒<%= @order.delivery_postal_code %> <%= @order.delivery_address %><br>
                       <%= @order.delivery_name %></td>
  </tr>

  <tr>
    <th>支払方法</th><td><%= Order.payment_methods_i18n[:"#{@order.payment_method}"] %></td>
  </tr>

</table>
<%= form_with model:@order,url:admin_order_path(@order.id),method: :patch do |f| %>

<h4>注文ステータス</h4><%= f.select :order_status, Order.order_statuses.keys.map {|k| [I18n.t("enums.order.order_status.#{k}"), k]} %>
<%= f.submit"更新" %>

<% end %>

<table>
  <thead>
    <tr>
      <th>商品名</th>
      <th>単価（税込）</th>
      <th>数量</th>
      <th>小計</th>
      <th>制作ステータス</th>
    </tr>
  </thead>

  <tbody>
    <% @order_details.each do |order_detail| %>

    <tr>

      <td><%= order_detail.item.name %></td>
      <td><%= order_detail.with_tax_price.to_s(:delimited) %></td>
      <td><%= order_detail.amount %></td>
      <td><%= order_detail.subtotal.to_s(:delimited) %></td>
          <% @total +=order_detail.subtotal %>

      <td><%= form_with model:order_detail,url:admin_order_order_detail_path(order_detail.id),method: :patch do |f| %>
          <%= f.select :production_status, OrderDetail.production_statuses.keys.map {|k| [I18n.t("enums.order_detail.production_status.#{k}"), k]} %>
          <%= f.submit"更新" %>
          <% end %>
      </td>
    </tr>
    <% end %>
  </tbody>
</table>

<h4>商品合計</h4><%= @total.to_s(:delimited) %>
                 <% @billing_amount +=@total %>
<h4>送料</h4><%=@order.postage.to_s(:delimited) %>
             <% @billing_amount +=@order.postage %>
<h4>請求金額合計</h4><%= @billing_amount.to_s(:delimited) %>